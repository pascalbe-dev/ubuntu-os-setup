---
- name: add apt signing keys
  apt_key:
    url: "{{ item }}"
  loop:
    - https://packages.cloud.google.com/apt/doc/apt-key.gpg
    - https://download.docker.com/linux/ubuntu/gpg
- name: add apt repos
  apt_repository:
    repo: "{{ item }}"
  loop:
    - "deb https://packages.cloud.google.com/apt cloud-sdk main"
    - "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
- name: update cache
  apt:
    name: wget
    update_cache: yes
- name: install apt tools
  apt:
    name: "{{ item }}"
  loop:
    - google-cloud-sdk
    - google-cloud-sdk-config-connector
    - docker-ce
- name: configure ubuntu
  become: true
  lineinfile:
    path: /etc/sysctl.conf
    line: fs.inotify.max_user_watches=524288
  notify: re-read sysctl config
- name: add ssh key
  become: false
  shell: "ssh-keygen -q -N '' -f {{ lookup('env', 'HOME') }}/.ssh/id_rsa"
  args:
    creates: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa"
  notify: store public ssh key
- name: configure standard tools
  become: false
  copy:
    src: configuration/git/.gitconfig
    dest: "{{ lookup('env', 'HOME') }}/"
- name: configure editors
  become: false
  copy:
    src: configuration/editors/.editorconfig
    dest: "{{ lookup('env', 'HOME') }}/"
- name: generate standard repository folder structure
  become: false
  file:
    path: "{{ lookup('env', 'HOME') }}/repos/{{ item }}/"
    state: directory
  loop:
    - home
    - work
    - community
    - tryout
- name: add utility scripts
  become: false
  block:
    - name: ensure utility scripts folder exists
      file:
        path: "{{ lookup('env', 'HOME') }}/.scripts/"
        state: directory
    - name: copy utility scripts
      copy:
        src: utility-scripts/github-pull-request.sh
        mode: u+x
        dest: "{{ lookup('env', 'HOME') }}/.scripts/"
    - name: source utility scripts
      lineinfile:
        path: "{{ lookup('env', 'HOME') }}/.zshrc"
        line: "export PATH=$PATH:{{ lookup('env', 'HOME') }}/.scripts/"
- name: add user to required groups
  become: true
  block:
    - name: add user to docker group
      user:
        # TODO: do not hardcode the username
        name: pascalbe
        groups: docker
        append: yes
